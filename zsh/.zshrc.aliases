# cd paths
alias uni="cd ${uni}"
alias dot="cd ${dot}"
alias mygit="cd ${mygit}"

# docker containers
alias run-xv6="docker run -it --name xv6"
alias stop-xv6="docker stop xv6"
alias run-xv6-cs="docker run -it --name xv6-cs"
alias stop-xv6-cs="docker stop xv6-cs"
alias run-plantuml="docker run -d -p 8080:8080 --name umlserver plantuml/plantuml-server:jetty"
alias stop-plantuml="docker stop umlserver && docker rm umlserver"

# Other Tools
# -----------

if `where krita &> /dev/null`;
then
    alias paint="krita"
fi

if [ -e ${jars}/bfg.jar ]; 
then
    alias bfg="java -jar ${jars}/bfg.jar"
fi

if `where clang-format &> /dev/null`;
then
    alias clangf-init="cp ${dot}/${templates}/c/c-project/.clang-format"
fi

if `where pip3 &> /dev/null`; then
    alias pipupgrade=\
        "python3 -m pip --disable-pip-version-check "\
                "list --outdated --format=json "\
        " | python3 -c "\
            "'"\
                "import sys, json;"\
                "print(\"\\n\".join("\
                    "[x['name'] for x in json.load(sys.stdin)]"\
                "))"\
            "'"\
        " | xargs -n1 pip install -U"
fi

py_versions=("python3", "python3.11", "python3.12" "python3.13")

for py_ver in "${py_versions[@]}"; do
    if `where ${py_ver} &> /dev/null`; then
        alias py="python"
        alias py3="${py_ver}"
        alias pyvenv="${py_ver} -m venv .venv"
        alias pyhere="source .venv/bin/activate"
    fi
done

if `where python3.11 &> /dev/null`;
then
    alias py11="python3.11"
    alias py311="python3.11"
fi

if `where python3.12 &> /dev/null`;
then
    alias py12="python3.12"
    alias py312="python3.12"
fi

if `where python3.13 &> /dev/null`;
then
    alias py13="python3.13"
    alias py313="python3.13"
fi
