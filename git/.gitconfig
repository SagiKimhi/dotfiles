[alias]
    # git log aliases
	l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --abbrev-commit --date=relative --branches
	ll = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset%n' --abbrev-commit --branches
    ls = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --numstat

    # git add aliases
    a = add
    ap = add -p

    # git branch aliases
    b = branch
    ba = branch -a
    bl = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

    # git checkout aliases
    co = checkout
    cob = checkout origin/main -b

    # git commit aliases
    c = commit --verbose
    m = commit --amend --verbose
    ca = commit -a --verbose
    cm = commit -m
    cam = commit -a -m

    # git diff aliases
    d = diff
    dw = diff --word-diff-regex=. --color-words
    ds = diff --stat
    dc = diff --cached
    dt = difftool -d -t meld

    # git status aliases
    s = status -s -b --verbose
    si = status -s -b --show-stash --ignored
    sl = status --long -b --show-stash
    sv = status --long -b --show-stash --verbose
    sli = status --long -b --show-stash --ignored
    siv = status --long -b --show-stash --ignored --verbose

    # list aliases
    la = "!git config -l | grep alias | cut -c 7-"

    # branch delete: This checks out your local master branch and deletes all local branches that have already been merged to master
    brd = !sh -c \"git checkout main && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d\"
    # branch delete here: Deletes all local branches that have already been merged to the branch that you're currently on
    brdhere = !sh -c \"git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d\"


