# [includeIf "gitdir:~/.project/git/"]
    # path = default.gitconfig

# [includeIf "gitdir:~/.project/git/work/"]
    # path = work.gitconfig

[core]
    editor = nvim
    safecrlf = true

[user]
    useConfigOnly = true

[init]
    defaultBranch = main

[fetch]
    all = true
    prune = true
    pruneTags = true

[pull]
    rebase = true
    fastForward = only

[push]
    followTags = true

[branch]
    autoSetupRebase = always

[rebase]
    stat = true

[diff]
    renames = true
    wordRegex = .
    algorithm = histogram
    submodule = diff
    srcPrefix = src/
    dstPrefix = dst/
    mnemonicPrefix = true

[color]
    ui = always
    grep = always
    diff = always
    status = always
    branch = true
    showBranch = true

[status]
    branch = true
    renames = true
    aheadBehind = true

[rerere]
    enabled = true
    autoUpdate = true

[man]
    viewer = nvim

[man.nvim]
    cmd = nvim

[log]
    decorate = full

[alias]
# List all aliases
la = "!git config -l | grep alias | cut -c 7-"

# -----------------------------------------------------------------------------
# git add aliases
# -----------------------------------------------------------------------------

a = add
ap = add -p

# -----------------------------------------------------------------------------
# git show aliases
# -----------------------------------------------------------------------------

sshow=show -s --date=short --pretty='format:%C(red)%h %C(reset)(%s, %ad)'

# -----------------------------------------------------------------------------
# git checkout aliases
# -----------------------------------------------------------------------------

co = checkout
cob = checkout origin/main -b

# -----------------------------------------------------------------------------
# git commit aliases
# -----------------------------------------------------------------------------

c = commit -s --verbose
m = commit --amend --verbose
ca = commit -s -a --verbose
cm = commit --verbose -s -m
cam = commit --verbose -s -a -m

# -----------------------------------------------------------------------------
# git diff aliases
# -----------------------------------------------------------------------------

d = diff --color-words
ds = diff --stat
dw = diff --word-diff-regex=. --color-words
dc = diff --word-diff-regex=. --color-words --cached
dt = difftool --tool=nvimdiff --no-symlinks --dir-diff --ignore-submodules 

# -----------------------------------------------------------------------------
# git status aliases
# -----------------------------------------------------------------------------

s = status -s -b --verbose
sr = status -s -b --no-renames --verbose
si = status -s -b --show-stash --ignored
sl = status -b --long --show-stash
sv = status --long -b --show-stash --verbose
slr = status -b --long --no-renames --verbose
sli = status --long -b --show-stash --ignored
siv = status --long -b --show-stash --ignored --verbose

# -----------------------------------------------------------------------------
# git branch aliases
# -----------------------------------------------------------------------------

b = branch
bl = branch --sort='-authordate' --format='%(color:red)%(objectname:short)%20%(color:yellow)%(authordate:short)%20%(color:cyan)%(HEAD)%20%(color:reset)%(refname:short)%20%(color:green)(%(authordate:relative))'
br = branch --remotes --sort='-authordate' --format='%(color:red)%(objectname:short)%20%(color:yellow)%(authordate:short)%20%(color:cyan)%(HEAD)%20%(color:reset)%(refname:short)%20%(color:green)(%(authordate:relative))'
ba = branch -a --sort='-authordate' --format='%(color:red)%(objectname:short)%20%(color:yellow)%(authordate:short)%20%(color:cyan)%(HEAD)%20%(color:reset)%(refname:short)%20%(color:green)(%(authordate:relative))'

# -----------------------------------------------------------------------------
# git log aliases
# -----------------------------------------------------------------------------

l = log --graph --pretty='format:%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --abbrev-commit --date=relative --branches
ll = log --graph --pretty='format:%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset%n' --abbrev-commit --branches --decorate --numstat
ls = log --pretty='format:%C(yellow)%h %ad%Cred%d %Creset%s%Cblue [%cn]' --decorate --date=short --numstat

# -----------------------------------------------------------------------------
# Branch deletion aliases - optional
# -----------------------------------------------------------------------------

# Alias: brd
#
# Branch Delete.
#
# This checks out your local master branch and deletes all
# local branches that have already been merged to master.
#
# brd = !sh -c \"git checkout main && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d\"
# -----------------------------------------------------------------------------------------------------

# Alias: brdhere
#
# branch Delete Here. 
#
# Deletes all local branches that have already been merged to the branch
# that you're currently on.
#
#
# brdhere = !sh -c \"git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d\"
# ------------------------------------------------------------------------------------

